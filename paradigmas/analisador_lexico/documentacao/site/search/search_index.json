{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o do Analisador L\u00e9xico","text":"<p>Esta documenta\u00e7\u00e3o descreve a estrutura do c\u00f3digo do Analisador L\u00e9xico desenvolvido durante a disciplina Paradigmas de Programa\u00e7\u00e3o.</p>"},{"location":"#classes","title":"Classes","text":""},{"location":"#token","title":"Token","text":"<p>A classe <code>Token</code> \u00e9 a classe base para representar tokens. Ela possui os seguintes m\u00e9todos e atributos:</p> <ul> <li> <p><code>__init__(self, nome, formato, significado=None)</code>: Inicializa um token com nome, formato e significado (opcional).</p> </li> <li> <p><code>__str__(self)</code>: Retorna uma representa\u00e7\u00e3o de string do token (seu nome).</p> </li> <li> <p><code>verifica_lexema(self, index, expressao)</code>: Verifica se o token corresponde ao lexema na posi\u00e7\u00e3o 'index' da express\u00e3o.</p> </li> <li> <p><code>get_lexema(self, index, expressao)</code>: Obt\u00e9m o lexema correspondente ao token na posi\u00e7\u00e3o 'index' da express\u00e3o.</p> </li> </ul>"},{"location":"#lexema","title":"Lexema","text":"<p>A classe <code>Lexema</code> representa lexemas com seus tokens associados. Ela possui os seguintes m\u00e9todos e atributos:</p> <ul> <li> <p><code>__init__(self, valor, token)</code>: Inicializa um lexema com um valor e um token associado.</p> </li> <li> <p><code>__str__(self)</code>: Retorna uma representa\u00e7\u00e3o de string do lexema e seu token associado.</p> </li> <li> <p><code>get_significado(self)</code>: Obt\u00e9m o significado associado ao token do lexema, se existir.</p> </li> </ul>"},{"location":"#tokens-especificos","title":"Tokens Espec\u00edficos","text":"<p>Existem classes que herdam de <code>Token</code> e definem tokens espec\u00edficos, como <code>Verdadeiro</code>, <code>Falso</code>, <code>Comentario</code>, <code>Espaco</code>, <code>Identificador</code>, <code>QuebraLinha</code> e <code>Desconhecido</code>. Cada uma dessas classes possui m\u00e9todos para verificar e obter lexemas espec\u00edficos.</p>"},{"location":"#tokens","title":"Tokens","text":"<p>A classe <code>Tokens</code> cria inst\u00e2ncias de todos os tokens e fornece m\u00e9todos para analisar a express\u00e3o. Ela possui m\u00e9todos para inicializar os tokens, obter uma \u00fanica inst\u00e2ncia da classe (singleton), representar os tokens como string e mais.</p>"},{"location":"#analisadorlexico","title":"AnalisadorLexico","text":"<p>A classe <code>AnalisadorLexico</code> analisa express\u00f5es usando os tokens definidos. Ela possui m\u00e9todos para analisar a express\u00e3o, listar lexemas reconhecidos, obter o significado da express\u00e3o l\u00f3gica com base nos lexemas reconhecidos e gerar um relat\u00f3rio completo da an\u00e1lise l\u00e9xica da express\u00e3o.</p>"},{"location":"#uso","title":"Uso","text":"<p>Para usar o Analisador L\u00e9xico, siga as instru\u00e7\u00f5es abaixo:</p> <ol> <li> <p>Crie uma inst\u00e2ncia da classe <code>AnalisadorLexico</code>.</p> </li> <li> <p>Chame o m\u00e9todo <code>analise()</code> ou <code>analise(expressao)</code>. Se n\u00e3o passar a express\u00e3o como argumento, ser\u00e1 usado o cont\u00e9udo do arquivo <code>entrada.in</code>.</p> </li> <li> <p>Use os m\u00e9todos da classe <code>AnalisadorLexico</code> para obter informa\u00e7\u00f5es sobre a an\u00e1lise l\u00e9xica, como lista de lexemas reconhecidos e o significado da express\u00e3o.</p> </li> <li> <p>Consulte a documenta\u00e7\u00e3o do c\u00f3digo-fonte para obter informa\u00e7\u00f5es detalhadas sobre cada classe e m\u00e9todo.</p> </li> </ol>"},{"location":"#exemplo-de-uso","title":"Exemplo de Uso","text":"<pre><code>analisador = AnalisadorLexico()\nanalisador.analise('(A+B)*C-&gt;D')\nprint(analisador.get_relatorio())\n</code></pre>"}]}